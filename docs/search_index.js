(function () {
  window.DENO_DOC_SEARCH_INDEX = {"kind":"search","nodes":[{"id":"namespace_DurationTracker","kind":[{"char":"c","kind":"Class","title":"Class"}],"name":"DurationTracker","file":".","doc":"A utility class for tracking the progress and estimating the remaining time of iterative processes. It calculates the average duration of completed iterations and uses this to project the time left for the remaining tasks. This is particularly useful for long-running operations where users need feedback on progress.The tracker provides methods to mark the start of an iteration and to log the estimated remaining time. The log message can be customized with a prefix and suffix.","url":"././~/DurationTracker.html","category":"Other","deprecated":false},{"id":"namespace_DurationTracker","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"DurationTracker.prototype.start","file":".","doc":"Starts the timer for the current iteration.","url":"././~/DurationTracker.prototype.start.html","deprecated":false},{"id":"namespace_DurationTracker","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"DurationTracker.prototype.log","file":".","doc":"Logs the estimated remaining time based on the average duration of previous iterations.","url":"././~/DurationTracker.prototype.log.html","deprecated":false},{"id":"namespace_DurationTracker","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"DurationTracker.prototype.iterationDurations","file":".","doc":"An array to store the durations of each iteration.","url":"././~/DurationTracker.prototype.iterationDurations.html","deprecated":false},{"id":"namespace_DurationTracker","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"DurationTracker.prototype.currentStart","file":".","doc":"The start time of the current iteration.","url":"././~/DurationTracker.prototype.currentStart.html","deprecated":false},{"id":"namespace_DurationTracker","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"DurationTracker.prototype.currentEnd","file":".","doc":"The end time of the current iteration.","url":"././~/DurationTracker.prototype.currentEnd.html","deprecated":false},{"id":"namespace_DurationTracker","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"DurationTracker.prototype.length","file":".","doc":"The total number of iterations.","url":"././~/DurationTracker.prototype.length.html","deprecated":false},{"id":"namespace_DurationTracker","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"DurationTracker.prototype.prefix","file":".","doc":"Optional prefix for the log message.","url":"././~/DurationTracker.prototype.prefix.html","deprecated":false},{"id":"namespace_DurationTracker","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"DurationTracker.prototype.suffix","file":".","doc":"Option suffix for the log message.","url":"././~/DurationTracker.prototype.suffix.html","deprecated":false},{"id":"namespace_addClusters","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"addClusters","file":".","doc":"Groups data points into clusters using the DBSCAN (Density-Based Spatial Clustering of Applications with Noise) algorithm. This method is particularly effective at identifying clusters of arbitrary shapes and handling noise in the data.The function operates based on two key parameters: minDistance (also known as epsilon or Îµ) and minNeighbours. It classifies each data point into one of three categories:Core point: A point that has at least minNeighbours other points (including itself) within a minDistance radius. These points are the foundation of a cluster.Border point: A point that is within the minDistance of a core point but does not have enough neighbors to be a core point itself. Border points are on the edge of a cluster.Noise point: A point that is neither a core point nor a border point. These are outliers that do not belong to any cluster.The function modifies the input data array by adding two properties to each point:clusterId: A unique identifier for the cluster the point belongs to (e.g., 'cluster1'). For noise points, this will be null.clusterType: The classification of the point, which can be 'core', 'border', or 'noise'.","url":"././~/addClusters.html","category":"Statistics","deprecated":false},{"id":"namespace_addMahalanobisDistance","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"addMahalanobisDistance","file":".","doc":"Calculates the Mahalanobis distance for each object in an array relative to a specified origin point.The function enriches the input data array by adding a mahaDist property to each object, representing its Mahalanobis distance from the origin. The dimensions for the calculation are determined by the keys in the origin object.Optionally, you can also compute a similarity score, which is a normalized value between 0 and 1, where 1 indicates that the point is identical to the origin. To improve performance on large datasets, you can provide a pre-computed inverted covariance matrix.","url":"././~/addMahalanobisDistance.html","category":"Statistics","deprecated":false},{"id":"namespace_addZScore","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"addZScore","file":".","doc":"Calculates the Z-score for a specific numeric variable within an array of objects and adds it as a new property to each object. The Z-score is a statistical measure that indicates how many standard deviations a data point is from the mean of the dataset.The function modifies the input data array by adding a new key to each object, which by default is zScore. You can customize the name of this new key by using the newKey option.","url":"././~/addZScore.html","category":"Statistics","deprecated":false},{"id":"namespace_adjustToInflation","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"adjustToInflation","file":".","doc":"Adjusts a monetary amount for inflation using the Consumer Price Index (CPI).","url":"././~/adjustToInflation.html","category":"Finance","deprecated":false},{"id":"namespace_arraysToData","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"arraysToData","file":".","doc":"Transforms an object of arrays into an array of objects. This function is useful for converting data from a columnar format to a row-based format, which is common in data processing and visualization.It is assumed that all arrays in the input object have the same length.","url":"././~/arraysToData.html","category":"Formatting","deprecated":false},{"id":"namespace_askAI","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"askAI","file":".","doc":"Interacts with a Large Language Model (LLM) to perform a wide range of tasks, from answering questions to analyzing multimedia content. This function serves as a versatile interface to various AI models, including Google's Gemini and local models via Ollama.The function is designed to be highly configurable, allowing you to specify the AI model, credentials, and various input types such as text, images, audio, video, and even web pages. It also includes features for caching responses to improve performance and reduce costs, as well as for testing and cleaning the AI's output.Authentication: The function can be authenticated using environment variables (AI_KEY, AI_PROJECT, AI_LOCATION, AI_MODEL) or by passing credentials directly in the options object. Options will always take precedence over environment variables.Local Models: To use a local model with Ollama, set the OLLAMA environment variable to true and ensure that Ollama is running on your machine. You will also need to specify the model name using the AI_MODEL environment variable or the model option.Caching: Caching is a powerful feature that saves the AI's response to a local directory (.journalism-cache). When the same request is made again, the cached response is returned instantly, saving time and API costs. To enable caching, set the cache option to true.File Handling: The function can process both local files and files stored in Google Cloud Storage (GCS). Simply provide the file path or the gs:// URL. Note that Ollama only supports local files.","url":"././~/askAI.html","category":"AI","deprecated":false},{"id":"namespace_camelCase","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"camelCase","file":".","doc":"Converts a string into camelCase. This is useful for creating variable names or object keys from human-readable text.","url":"././~/camelCase.html","category":"Formatting","deprecated":false},{"id":"namespace_capitalize","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"capitalize","file":".","doc":"Capitalizes the first letter of a given string.","url":"././~/capitalize.html","category":"Formatting","deprecated":false},{"id":"namespace_createDirectory","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"createDirectory","file":".","doc":"Recursively creates a directory structure. This function is useful for ensuring that a path exists before writing a file to it.The function will not throw an error if the directory already exists. It can also accept a full file path, in which case it will create all the parent directories, ignoring the filename portion.","url":"././~/createDirectory.html","deprecated":false},{"id":"namespace_dataAsCsv","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"dataAsCsv","file":".","doc":"Converts an array of objects into a CSV (Comma-Separated Values) string.The function takes an array of objects and returns a string in CSV format. The first line of the string will be the headers, which are derived from the keys of the first object in the array. Each subsequent line will represent an object, with the values in the same order as the headers.","url":"././~/dataAsCsv.html","category":"Formatting","deprecated":false},{"id":"namespace_dataToArrays","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"dataToArrays","file":".","doc":"Transforms an array of objects into an object of arrays. This function is the inverse of arraysToData and is useful for converting data from a row-based format to a columnar format.","url":"././~/dataToArrays.html","category":"Formatting","deprecated":false},{"id":"namespace_deleteFromBucket","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"deleteFromBucket","file":".","doc":"Deletes a specified file from a Google Cloud Storage (GCS) bucket.The function requires the Google Cloud project ID and the target bucket name. These can be provided either through environment variables (BUCKET_PROJECT and BUCKET_NAME) or directly as parameters in the options object. Parameters passed in options will take precedence over environment variables.By default, if the specified file does not exist in the bucket, the function will throw an error. However, you can suppress this behavior by setting the try option to true, which will cause the function to complete silently if the file is not found.","url":"././~/deleteFromBucket.html","category":"Google","deprecated":false},{"id":"namespace_distance","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"distance","file":".","doc":"Calculates the Haversine distance between two geographical points (longitude and latitude) in kilometers. The Haversine formula is used to determine the great-circle distance between two points on a sphere given their longitudes and latitudes.This function is useful for geospatial applications where accurate distance measurements over the Earth's surface are required,.","url":"././~/distance.html","category":"Geo","deprecated":false},{"id":"namespace_downloadFile","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"downloadFile","file":".","doc":"Downloads a file from a given URL and saves it to a specified local path. This function is useful for programmatically fetching resources from the web, such as datasets, images, or documents.The function uses streams for efficient handling of potentially large files, ensuring that the entire file does not need to be loaded into memory at once.","url":"././~/downloadFile.html","category":"Web scraping","deprecated":false},{"id":"namespace_downloadFromBucket","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"downloadFromBucket","file":".","doc":"Downloads a file from a Google Cloud Storage (GCS) bucket to a specified local path. This function provides robust handling for existing local files, allowing you to skip downloads or overwrite files as needed.The function requires the Google Cloud project ID and the target bucket name. These can be provided either through environment variables (BUCKET_PROJECT and BUCKET_NAME) or directly as parameters in the options object. Parameters passed in options will take precedence over environment variables.By default, if a local file with the same name already exists at the destination path, the function will throw an error to prevent accidental overwrites. You can modify this behavior using the skip or overwrite options.","url":"././~/downloadFromBucket.html","category":"Google","deprecated":false},{"id":"namespace_euclideanDistance","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"euclideanDistance","file":".","doc":"Calculates the Euclidean distance between two points in a 2D Cartesian coordinate system. The Euclidean distance is the shortest straight-line distance between two points, often referred to as the \"as the crow flies\" distance.This function applies the Pythagorean theorem to compute the distance.","url":"././~/euclideanDistance.html","category":"Statistics","deprecated":false},{"id":"namespace_filesInBucket","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"filesInBucket","file":".","doc":"Lists files within a Google Cloud Storage (GCS) bucket. You can list all files in the bucket or narrow down the results to a specific folder. The function can also return the full Google Storage URIs for each file.This function requires the Google Cloud project ID and the target bucket name. These can be provided either through environment variables (BUCKET_PROJECT and BUCKET_NAME) or directly as parameters in the options object. Parameters passed in options will take precedence over environment variables.","url":"././~/filesInBucket.html","category":"Google","deprecated":false},{"id":"namespace_formatDate","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"formatDate","file":".","doc":"Formats a Date object into a human-readable string based on a specified format, style, and time zone. This function provides flexible date and time formatting options, including support for UTC, different linguistic styles (English/French), and various display preferences like abbreviations and zero-padding.","url":"././~/formatDate.html","category":"Formatting","deprecated":false},{"id":"namespace_formatNumber","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"formatNumber","file":".","doc":"Formats a number according to specified style, rounding, and display options. This versatile function can handle various numerical formatting needs.The function supports two main styles: \"cbc\" (Canadian Broadcasting Corporation style, typically English) and \"rc\" (Radio-Canada style, typically French), which dictate the thousands separator and decimal marker.","url":"././~/formatNumber.html","category":"Formatting","deprecated":false},{"id":"namespace_geoTo3D","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"geoTo3D","file":".","doc":"Converts geographical coordinates (longitude and latitude) into 3D Cartesian (x, y, z) coordinates based on a specified radius.The conversion assumes a spherical Earth model. The radius parameter determines the size of the sphere on which the points are projected.","url":"././~/geoTo3D.html","category":"Geo","deprecated":false},{"id":"namespace_getClosest","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"getClosest","file":".","doc":"Finds the geographical item closest to a given reference point (longitude and latitude) from a list of geographical items.The function calculates the distance between the reference point and each item in the geoItems array using the Haversine formula (via the distance function). It then returns the item with the minimum distance.Optionally, you can choose to add the calculated distance as a new property to the returned closest item. If the geoItems have a properties key (common in GeoJSON-like structures), the distance will be added there; otherwise, it will be added directly to the item object.","url":"././~/getClosest.html","category":"Geo","deprecated":false},{"id":"namespace_getCovarianceMatrix","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"getCovarianceMatrix","file":".","doc":"Computes the covariance matrix for a given dataset. The covariance matrix is a square matrix that describes the covariance between each pair of variables in a dataset.The function takes a 2D array (matrix) as input, where each inner array represents a data point and each element within the inner array represents a variable. It calculates the covariance between all pairs of variables.Optionally, you can choose to invert the computed covariance matrix by setting the invert option to true. The inverse covariance matrix is often used in statistical applications, particularly in the calculation of Mahalanobis distance.","url":"././~/getCovarianceMatrix.html","category":"Statistics","deprecated":false},{"id":"namespace_getEmbedding","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"getEmbedding","file":".","doc":"Generates a numerical embedding (vector representation) for a given text string. Embeddings are crucial for various natural language processing (NLP) tasks, including semantic search, text classification, clustering, and anomaly detection, as they allow text to be processed and compared mathematically.This function supports both Google's Gemini AI models and local models running with Ollama. It provides options for authentication, model selection, and caching to optimize performance and cost.Authentication: Credentials and model information can be provided via environment variables (AI_KEY, AI_PROJECT, AI_LOCATION, AI_EMBEDDINGS_MODEL) or directly through the options object. Options take precedence over environment variables.Local Models: To use a local model with Ollama, set the OLLAMA environment variable to true and ensure Ollama is running on your machine. You will also need to specify the model name using the AI_EMBEDDINGS_MODEL environment variable or the model option.Caching: To save resources and time, you can enable caching by setting cache to true. Responses will be stored in a local .journalism-cache directory. If the same request is made again, the cached response will be returned, avoiding redundant API calls. Remember to add .journalism-cache to your .gitignore file.","url":"././~/getEmbedding.html","category":"AI","deprecated":false},{"id":"namespace_getGeoTiffDetails","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"getGeoTiffDetails","file":".","doc":"Extracts detailed information from a GeoTIFF file, which can then be used with the getGeoTiffValues function.","url":"././~/getGeoTiffDetails.html","category":"Geo","deprecated":false},{"id":"namespace_getGeoTiffValues","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"getGeoTiffValues","file":".","doc":"Extracts values at specific latitude and longitude coordinates from a GeoTIFF image. This function works in conjunction with the getGeoTiffDetails function, using the details returned by it.","url":"././~/getGeoTiffValues.html","category":"Geo","deprecated":false},{"id":"namespace_getHtmlTable","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"getHtmlTable","file":".","doc":"Extracts tabular data from an HTML table on a given URL and returns it as an array of objects. This function is particularly useful for scraping structured data from web pages.","url":"././~/getHtmlTable.html","deprecated":false},{"id":"namespace_getHumidex","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"getHumidex","file":".","doc":"Calculates the humidex factor in Celsius based on the given temperature in Celsius and humidity percentage.If the calculated humidex is less than the provided temperature, the temperature itself is returned.This calculation uses the formula provided by the Canadian Centre for Climate Services.","url":"././~/getHumidex.html","category":"Weather and climate","deprecated":false},{"id":"namespace_getId","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"getId","file":".","doc":"Generates a unique ID string composed of letters and numbers, without spaces or special characters. By default, the ID has a length of 6 characters. While handy for general use, it is not cryptographically secure, meaning it should not be used for security-sensitive applications where true randomness and unpredictability are required.The function ensures uniqueness by keeping track of previously generated IDs within the current session. If a collision occurs (which is highly unlikely for reasonable lengths), it will attempt to generate a new ID. For very small length values, repeated collisions might trigger a warning to suggest increasing the length to maintain uniqueness.","url":"././~/getId.html","category":"Other","deprecated":false},{"id":"namespace_getMahalanobisDistance","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"getMahalanobisDistance","file":".","doc":"Computes the Mahalanobis distance between two data points (x1 and x2) given the inverted covariance matrix of the dataset. The Mahalanobis distance is a measure of the distance between a point and a distribution. It is a unitless measure. This function can handle data points of any dimension (i.e., with more than 2 coordinates).This function requires the inverted covariance matrix of your dataset, which can be computed using the getCovarianceMatrix function with the invert: true option.","url":"././~/getMahalanobisDistance.html","category":"Statistics","deprecated":false},{"id":"namespace_getSeason","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"getSeason","file":".","doc":"Determines the current season based on a given date, hemisphere, and season type. This function provides flexibility by allowing you to specify the exact date, the hemisphere (Northern or Southern), and the method of season calculation (astronomical or meteorological). By default, it uses the current date, the Northern Hemisphere, and astronomical seasons.Astronomical seasons are based on the Earth's position in its orbit around the sun, marked by equinoxes and solstices. Meteorological seasons are based on the annual temperature cycle and are typically defined by calendar months, making them consistent for statistical purposes.","url":"././~/getSeason.html","category":"Weather and climate","deprecated":false},{"id":"namespace_getSheetData","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"getSheetData","file":".","doc":"Retrieves data from a Google Sheet.By default, this function attempts to authenticate using environment variables (GOOGLE_PRIVATE_KEY for the API key and GOOGLE_SERVICE_ACCOUNT_EMAIL for the service account email). For detailed instructions on setting up credentials, refer to the node-google-spreadsheet authentication guide: https://theoephraim.github.io/node-google-spreadsheet/#/guides/authentication.","url":"././~/getSheetData.html","category":"Google","deprecated":false},{"id":"namespace_getStatCanTable","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"getStatCanTable","file":".","doc":"Retrieves tabular data from Statistics Canada's website using a provided Product ID (PID). This function automates the process of fetching, unzipping, and parsing the CSV data directly from StatCan's API, making it easy to integrate official Canadian statistics into applications or analyses.The PID is a unique identifier for each table on the Statistics Canada website. It can typically be found in the URL of the table's page (e.g., https://www150.statcan.gc.ca/t1/tbl1/en/tv.action?pid=98100001 where 98100001 is the PID).","url":"././~/getStatCanTable.html","category":"Web scraping","deprecated":false},{"id":"namespace_getYahooFinanceData","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"getYahooFinanceData","file":".","doc":"Fetches historical financial data for a given stock symbol from Yahoo Finance. This function provides a convenient way to access various financial metrics (e.g., open, high, low, close, adjusted close, volume) at specified intervals (daily, hourly, or minute-by-minute).Important Note on Data Usage: The use of a small amount of data from Yahoo Finance is generally tolerated for educational or public interest purposes. However, if you intend to collect and reuse a large volume of this data, especially for commercial purposes, it is crucial to contact the Yahoo Finance team or consider purchasing a premium subscription to ensure compliance with their terms of service.","url":"././~/getYahooFinanceData.html","category":"Finance","deprecated":false},{"id":"namespace_inBucket","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"inBucket","file":".","doc":"Checks if a specified file exists within a Google Cloud Storage (GCS) bucket. This function provides a straightforward way to verify the presence of a file in your GCS infrastructure, which is useful for conditional operations, data validation, or status checks.Authentication and bucket identification can be configured either through environment variables (BUCKET_PROJECT for the Google Cloud Project ID and BUCKET_NAME for the bucket name) or by passing them directly as options to the function. Options provided directly will take precedence over environment variables.","url":"././~/inBucket.html","category":"Google","deprecated":false},{"id":"namespace_invertMatrix","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"invertMatrix","file":".","doc":"Computes the inverse of a square matrix.The function takes a square matrix as input and returns its inverse. It handles both 2x2 and larger square matrices. If the matrix is singular (i.e., its determinant is zero), it cannot be inverted, and the function will throw an error.","url":"././~/invertMatrix.html","category":"Statistics","deprecated":false},{"id":"namespace_logBarChart","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"logBarChart","file":".","doc":"Generates and logs a text-based bar chart to the console. This function is useful for quickly visualizing data distributions or comparisons directly within a terminal or log output, without needing a graphical interface. It's particularly effective for presenting categorical data or showing the relative magnitudes of different items.The chart is constructed using ASCII characters, making it universally compatible across various terminal environments. It can display data for various categories and their corresponding numerical values, with extensive options for custom formatting of labels and values, controlling the chart's width, and adding a descriptive title or a total label. For optimal visualization, it's recommended that the input data be sorted by the values key in descending order, though the function does not enforce this.","url":"././~/logBarChart.html","category":"Dataviz","deprecated":false},{"id":"namespace_logDotChart","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"logDotChart","file":".","doc":"Generates and logs a text-based dot chart to the console. This function is ideal for visualizing the relationship between two numerical variables. It provides a quick, terminal-friendly way to inspect data trends and distributions.The chart is rendered using ASCII characters, ensuring compatibility across various terminal environments. It supports custom formatting for both x and y-axis values, and can generate small multiples to compare distributions across different categories. While the function expects data to be sorted by the x-axis values for proper rendering, it does not enforce this.","url":"././~/logDotChart.html","category":"Dataviz","deprecated":false},{"id":"namespace_logLineChart","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"logLineChart","file":".","doc":"Generates and logs a text-based line chart to the console. This function is particularly useful for visualizing trends over time providing a quick and accessible way to understand data progression directly within a terminal or log output.The chart is rendered using ASCII characters, ensuring broad compatibility. It supports custom formatting for both x and y-axis values, and can generate small multiples to compare trends across different categories. When the chart's width is smaller than the number of data points, the line represents an averaged approximation of the data, providing a smoothed view of the trend. For optimal visualization, it's recommended that the input data be sorted by the x-axis values.","url":"././~/logLineChart.html","category":"Dataviz","deprecated":false},{"id":"namespace_mortgageInsurancePremium","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"mortgageInsurancePremium","file":".","doc":"Calculates the mortgage insurance premium based on the property's purchase price and the down payment amount. This function is designed to reflect the premium rates typically applied in Canada, as outlined by institutions like the Financial Consumer Agency of Canada. The calculated premium is rounded to the nearest integer.Mortgage insurance is generally required in Canada when the down payment is less than 20% of the home's purchase price.","url":"././~/mortgageInsurancePremium.html","category":"Finance","deprecated":false},{"id":"namespace_mortgageMaxAmount","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"mortgageMaxAmount","file":".","doc":"Calculates the maximum affordable property purchase price and the corresponding mortgage amount a borrower can qualify for, based on their annual income, down payment, and current mortgage interest rates. This function is designed to simulate mortgage qualification criteria, taking into account various financial factors and debt service ratios.The calculation incorporates a stress test, where the interest rate used for qualification is the higher of the provided rate + 2% or 5.25% (a common benchmark in Canada). It also considers monthly debt payments, heating costs, property taxes, and condo fees to determine the Gross Debt Service (GDS) and Total Debt Service (TDS) ratios, which are critical in mortgage approvals.","url":"././~/mortgageMaxAmount.html","category":"Finance","deprecated":false},{"id":"namespace_mortgagePayments","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"mortgagePayments","file":".","doc":"Calculates and returns a detailed schedule of fixed-rate mortgage payments. This function is designed to provide a comprehensive breakdown of each payment, including the principal and interest portions, remaining balance, and cumulative amounts paid. It adheres to Canadian mortgage regulations, which typically require semi-annual compounding, but allows for customization of the compounding frequency.The function is flexible, supporting various payment frequencies (weekly, bi-weekly, monthly, semi-monthly, accelerated weekly, accelerated bi-weekly) and allowing for the specification of the mortgage amount, interest rate, term, and amortization period. It also includes options for rounding payment values and enabling debug logging.","url":"././~/mortgagePayments.html","category":"Finance","deprecated":false},{"id":"namespace_overwriteSheetData","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"overwriteSheetData","file":".","doc":"Clears the content of a Google Sheet and then populates it with new data. This function is useful for regularly updating datasets in Google Sheets, ensuring that the sheet always reflects the latest information without manual intervention.The function automatically infers column headers from the keys of the first object in your data array. It supports various options for customizing the update process, including adding a timestamp of the last update, prepending custom text, and controlling how Google Sheets interprets the data types.By default, authentication is handled via environment variables (GOOGLE_PRIVATE_KEY and GOOGLE_SERVICE_ACCOUNT_EMAIL). For detailed setup instructions, refer to the node-google-spreadsheet authentication guide: https://theoephraim.github.io/node-google-spreadsheet/#/guides/authentication.","url":"././~/overwriteSheetData.html","category":"Google","deprecated":false},{"id":"namespace_prettyDuration","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"prettyDuration","file":".","doc":"Formats a duration into a human-readable string, breaking it down into years, months, days, hours, minutes, seconds, and milliseconds. This function is useful for displaying elapsed time in a user-friendly format, such as for performance logging, task completion times, or general time tracking.The function can calculate the duration from a given start time to the current time, or between a specified start and end time. It provides options for logging the output directly to the console and adding custom prefixes or suffixes to the formatted string. Note that for simplicity, months are approximated as 30 days and years as 365 days.","url":"././~/prettyDuration.html","category":"Formatting","deprecated":false},{"id":"namespace_publishChartDW","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"publishChartDW","file":".","doc":"Publishes a specified Datawrapper chart, table, or map. This function streamlines the process of making your Datawrapper visualizations live, allowing for automated deployment and updates. It handles authentication using an API key, which can be provided via environment variables or directly through options.","url":"././~/publishChartDW.html","category":"Dataviz","deprecated":false},{"id":"namespace_reencode","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"reencode","file":".","doc":"Converts a file from one character encoding to another. This function is particularly optimized for handling large files.Character encoding is crucial for ensuring that text data is displayed correctly across different systems and applications. This function helps resolve issues related to garbled text when files are created or read with different encoding standards.","url":"././~/reencode.html","category":"Formatting","deprecated":false},{"id":"namespace_removeDirectory","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"removeDirectory","file":".","doc":"Removes a directory and all its contents recursively.Caution: Use this function with care, as it permanently deletes files and directories without sending them to the recycle bin or trash. Ensure that the path provided is correct to avoid accidental data loss.","url":"././~/removeDirectory.html","category":"Other","deprecated":false},{"id":"namespace_rewind","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"rewind","file":".","doc":"Rewinds the winding order of the specified GeoJSON object to be clockwise. It is based on the D3-geo library's winding order conventions.","url":"././~/rewind.html","category":"Geo","deprecated":false},{"id":"namespace_round","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"round","file":".","doc":"Rounds a number based on specified criteria: a fixed number of decimal places, to the nearest integer multiple, or to a specific number of significant digits. This function provides flexible rounding capabilities essential for data presentation and numerical accuracy.By default, if no options are specified, the function rounds to the nearest whole number.","url":"././~/round.html","category":"Formatting","deprecated":false},{"id":"namespace_saveChart","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"saveChart","file":".","doc":"Saves an Observable Plot chart as an image file (.png or .jpeg) or an SVG file (.svg).When saving as an SVG, only the SVG elements will be captured.","url":"././~/saveChart.html","category":"Dataviz","deprecated":false},{"id":"namespace_sleep","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"sleep","file":".","doc":"Pauses the execution of an asynchronous function for a specified duration. This utility is useful for introducing delays in workflows, throttling requests, or simulating real-world latencies.It can also adjust the pause duration by subtracting any time already elapsed since a given start point, ensuring more precise delays. This is particularly useful for respecting API rate limits, ensuring that the total time spent between requests meets a minimum threshold without over-waiting if the preceding operations took some time. If the elapsed time is greater than or equal to ms, the function will resolve immediately without pausing.","url":"././~/sleep.html","category":"Other","deprecated":false},{"id":"namespace_styledLayerDescriptor","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"styledLayerDescriptor","file":".","doc":"Generates an OpenGIS Styled Layer Descriptor (SLD) XML string, encoded for use in a URL. This function is particularly useful for dynamically styling Web Map Service (WMS) layers, allowing for custom color scales and visual representations of geospatial data directly through the WMS request.The SLD specifies how a map layer should be rendered. This function focuses on creating a ColorMap within the SLD, which defines a gradient of colors based on data values. This is commonly used for visualizing continuous data, such as temperature, elevation, or precipitation, on a map.","url":"././~/styledLayerDescriptor.html","category":"Geo","deprecated":false},{"id":"namespace_toBucket","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"toBucket","file":".","doc":"Uploads a local file to a Google Cloud Storage (GCS) bucket and returns the URI of the uploaded file. This function provides robust control over the upload process, including options for skipping uploads if the file already exists, overwriting existing files, and setting custom metadata.By default, if a file with the same destination path already exists in the bucket, an error will be thrown to prevent accidental overwrites. You can modify this behavior using the skip or overwrite options.Authentication and bucket identification can be configured either through environment variables (BUCKET_PROJECT for the Google Cloud Project ID and BUCKET_NAME for the bucket name) or by passing them directly as options to the function. Options provided directly will take precedence over environment variables.","url":"././~/toBucket.html","category":"Google","deprecated":false},{"id":"namespace_unzip","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"unzip","file":".","doc":"Unzips a given zipped file to a specified output directory. This function provides a convenient way to extract compressed archives, commonly used for distributing data or software. It offers an option to delete the original zipped file after successful extraction, which is useful for cleanup operations.","url":"././~/unzip.html","category":"Other","deprecated":false},{"id":"namespace_updateAnnotationsDW","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"updateAnnotationsDW","file":".","doc":"Updates annotations on a Datawrapper chart. This function allows you to programmatically add, modify, or remove text and line annotations on your Datawrapper visualizations, providing precise control over highlighting specific data points or trends.This function supports various annotation properties, including position, text content, styling (bold, italic, color, size), alignment, and connector lines with customizable arrowheads.Authentication is handled via an API key, which can be provided through environment variables (DATAWRAPPER_KEY) or explicitly in the options. For detailed information on Datawrapper annotations and their properties, refer to the official Datawrapper API documentation.","url":"././~/updateAnnotationsDW.html","category":"Dataviz","deprecated":false},{"id":"namespace_updateDataDW","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"updateDataDW","file":".","doc":"Updates the data of a specified Datawrapper chart, table, or map. This function is essential for keeping your Datawrapper visualizations dynamic and up-to-date with the latest information. It supports both CSV data for standard charts and tables, and JSON data for more complex visualizations like locator maps.Datawrapper is a powerful tool for creating interactive data visualizations. This function allows for programmatic updates, which is ideal for automated data pipelines, dashboards, or applications that require fresh data to be reflected in visualizations without manual intervention.Authentication is handled via an API key, which can be provided through environment variables (process.env.DATAWRAPPER_KEY) or explicitly in the options. The Content-Type header for the API request is automatically set based on whether the data is CSV or JSON.","url":"././~/updateDataDW.html","category":"Dataviz","deprecated":false},{"id":"namespace_updateNotesDW","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"updateNotesDW","file":".","doc":"Updates the notes field for a specified Datawrapper chart, table, or map. This function provides a programmatic way to add or modify descriptive text associated with your Datawrapper visualizations, which can include data sources, methodologies, or any other relevant context.Authentication is handled via an API key, which can be provided through environment variables (DATAWRAPPER_KEY) or explicitly in the options.","url":"././~/updateNotesDW.html","category":"Dataviz","deprecated":false},{"id":"namespace_zip","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"zip","file":".","doc":"Compresses one or more files or an entire folder into a single zip archive. This function is useful for bundling multiple assets, preparing data for transfer, or creating backups.You can specify individual files to be added to the archive, or provide a path to a directory, in which case all its contents will be compressed. The function automatically creates the necessary directory structure for the output zip file if it doesn't already exist.","url":"././~/zip.html","category":"Other","deprecated":false}]};
})()